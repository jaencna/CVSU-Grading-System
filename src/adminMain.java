import com.mysql.cj.jdbc.DatabaseMetaData;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.Statement;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author josep
 */
public class adminMain extends javax.swing.JFrame {

    /**
     * Creates new form adminMain
     */
    public adminMain() {
        initComponents();
        Connect();
        LoadCourseNo();
        LoadSubjectNo();
        
        
    }
    
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    
    public void Connect(){
    
        try {
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/gradingsystem","root","");
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(studentLogin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(studentLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public void LoadCourseNo() {
        try {
            // Clear existing items in the combo box
            cmb_addept.removeAllItems();

            // Retrieve the list of courses from the database
            String sql = "SELECT DISTINCT courses FROM dept_tbl";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

            // Add each course to the combo box
            while (rs.next()) {
                cmb_addept.addItem(rs.getString("courses"));

            }
        } catch (SQLException ex) {
            Logger.getLogger(adminMain.class.getName()).log(Level.SEVERE, null, ex);
        }
      
    }
    
    public void LoadSubjectNo() {
        try {
            // Clear existing items in the combo box
            cmb_Subject.removeAllItems();

            // Retrieve the list of courses from the database
            String sql = "SELECT DISTINCT sub_Name FROM subject_tbl";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

            // Add each course to the combo box
            while (rs.next()) {
                cmb_Subject.addItem(rs.getString("sub_Name"));

            }
        } catch (SQLException ex) {
            Logger.getLogger(adminMain.class.getName()).log(Level.SEVERE, null, ex);
        }
      
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        txt_addept = new javax.swing.JTextField();
        cmb_Sect = new javax.swing.JComboBox<>();
        btn_deldept = new javax.swing.JButton();
        cmb_Year = new javax.swing.JComboBox<>();
        txt_QPercent = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        cmb_regteasub = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txt_LPercent = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        cmb_Subject = new javax.swing.JComboBox<>();
        btn_adddept = new javax.swing.JButton();
        cmb_addept = new javax.swing.JComboBox<>();
        txt_sub1name = new javax.swing.JTextField();
        txt_EPercent = new javax.swing.JTextField();
        cmb_sem = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btn_delsub = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cvsu logo.png"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin Main");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 51, 51));
        jButton5.setText("Add Subject");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 450, 140, 31));

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 51, 51));
        jButton3.setText("See Percentage");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 300, 140, 31));

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 51, 51));
        jButton2.setText("Update Percentage");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 300, 170, 31));

        txt_addept.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_addept.setForeground(new java.awt.Color(0, 51, 51));
        txt_addept.setVerifyInputWhenFocusTarget(false);
        txt_addept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_addeptActionPerformed(evt);
            }
        });
        jPanel1.add(txt_addept, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 400, 170, 31));

        cmb_Sect.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cmb_Sect.setForeground(new java.awt.Color(0, 51, 51));
        cmb_Sect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D" }));
        jPanel1.add(cmb_Sect, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 370, 118, -1));

        btn_deldept.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_deldept.setForeground(new java.awt.Color(0, 51, 51));
        btn_deldept.setText("Delete Department");
        btn_deldept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deldeptActionPerformed(evt);
            }
        });
        jPanel1.add(btn_deldept, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 400, -1, 31));

        cmb_Year.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cmb_Year.setForeground(new java.awt.Color(0, 51, 51));
        cmb_Year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        jPanel1.add(cmb_Year, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 320, 120, -1));

        txt_QPercent.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_QPercent.setForeground(new java.awt.Color(0, 51, 51));
        txt_QPercent.setPreferredSize(new java.awt.Dimension(64, 31));
        jPanel1.add(txt_QPercent, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 240, 120, -1));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 51, 51));
        jButton1.setText("Register Teacher");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1500, 660, 160, 30));

        cmb_regteasub.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cmb_regteasub.setForeground(new java.awt.Color(0, 51, 51));
        cmb_regteasub.setText("Search Subject:");
        cmb_regteasub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_regteasubActionPerformed(evt);
            }
        });
        jPanel1.add(cmb_regteasub, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 450, 140, 31));

        jTable1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 51, 51));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 200, 730, 430));

        txt_LPercent.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_LPercent.setForeground(new java.awt.Color(0, 51, 51));
        txt_LPercent.setDragEnabled(true);
        txt_LPercent.setPreferredSize(new java.awt.Dimension(64, 31));
        jPanel1.add(txt_LPercent, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 240, 120, -1));

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 51, 51));
        jButton4.setText("Add Percentage");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 300, 140, 31));

        cmb_Subject.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cmb_Subject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_SubjectActionPerformed(evt);
            }
        });
        jPanel1.add(cmb_Subject, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 500, 110, -1));

        btn_adddept.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_adddept.setForeground(new java.awt.Color(0, 51, 51));
        btn_adddept.setText("Add Department");
        btn_adddept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adddeptActionPerformed(evt);
            }
        });
        jPanel1.add(btn_adddept, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 400, -1, 31));

        cmb_addept.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cmb_addept.setForeground(new java.awt.Color(0, 51, 51));
        cmb_addept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_addeptActionPerformed(evt);
            }
        });
        jPanel1.add(cmb_addept, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 270, 120, -1));

        txt_sub1name.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_sub1name.setForeground(new java.awt.Color(0, 51, 51));
        jPanel1.add(txt_sub1name, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 450, 170, 31));

        txt_EPercent.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_EPercent.setForeground(new java.awt.Color(0, 51, 51));
        txt_EPercent.setMinimumSize(new java.awt.Dimension(64, 31));
        txt_EPercent.setPreferredSize(new java.awt.Dimension(64, 31));
        jPanel1.add(txt_EPercent, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 240, 110, -1));

        cmb_sem.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cmb_sem.setForeground(new java.awt.Color(0, 51, 51));
        cmb_sem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));
        jPanel1.add(cmb_sem, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, 120, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Subject:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 490, -1, 50));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Department:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Year:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, 50, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Section:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 370, -1, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Semester:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, -1, 50));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Exam %");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 200, -1, 50));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Lab %");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 200, -1, 50));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Quiz %");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, -1, 50));

        btn_delsub.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_delsub.setForeground(new java.awt.Color(0, 51, 51));
        btn_delsub.setText("Delete Department");
        btn_delsub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delsubActionPerformed(evt);
            }
        });
        jPanel1.add(btn_delsub, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 450, -1, 31));

        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 51, 51));
        jButton6.setText("button");
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 160, 260, -1));

        jPanel2.setBackground(new java.awt.Color(63, 171, 46));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 51, 51));
        jLabel17.setText("Administrator");
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 0, -1, 70));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1730, 70));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cvsu logo.png"))); // NOI18N
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(-170, 760, 340, 300));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cvsu logo.png"))); // NOI18N
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 740, 340, 300));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cvsu logo.png"))); // NOI18N
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 590, 340, 300));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(63, 171, 46));
        jLabel18.setText("Cavite State University");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 680, 550, 60));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 150)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(63, 171, 46));
        jLabel21.setText("IMUS");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 740, 410, 170));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel22.setText("Cavite State University");
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 680, 530, 70));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 154)); // NOI18N
        jLabel23.setText("IMUS");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 750, 410, 170));

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 80)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(63, 171, 46));
        jLabel24.setText("Campus");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 760, 320, 170));

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 80)); // NOI18N
        jLabel25.setText("Campus");
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 770, 320, 170));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1730, 930));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         new teacherRegister().setVisible(true);
         this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmb_addeptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_addeptActionPerformed
        // TODO add your handling code here:
        
    
    }//GEN-LAST:event_cmb_addeptActionPerformed

    private void btn_deldeptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deldeptActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:

            String id = txt_addept.getText();
            pst=con.prepareStatement("DELETE FROM dept_tbl WHERE courses=?");
            pst.setString(1, id);
                PreparedStatement checkDeptExistence = con.prepareStatement("SELECT * FROM dept_tbl WHERE courses=?");
    checkDeptExistence.setString(1, id);
    ResultSet deptExistenceResult = checkDeptExistence.executeQuery();

    if (!deptExistenceResult.next()) {
        JOptionPane.showMessageDialog(this, "Department does not exist!");
        return; // Exit the method if department does not exist
    }

            int k = pst.executeUpdate();
            if (k==1){

                JOptionPane.showMessageDialog(this,"Record Deleted Successfully!");

                txt_addept.setText("");

                txt_addept.requestFocus();

                LoadCourseNo();
            }else {

                JOptionPane.showMessageDialog(this,"Enter Department First!");

            }

        } catch (SQLException ex) {
            Logger.getLogger(adminMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btn_deldeptActionPerformed

    private void btn_adddeptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adddeptActionPerformed
//     try {
//        
//            String course = txt_addept.getText().trim();
//            
//            PreparedStatement pstCheck = con.prepareStatement("SELECT courses FROM dept_tbl WHERE courses = ?");
//            pstCheck.setString(1, course);
//            
//            ResultSet rsCheck = pstCheck.executeQuery();
//            
//            if(rsCheck.next()){
//
//                JOptionPane.showMessageDialog(this,"Course is Already Exixting");
//            
//            }else if (course.equals("")){
//                
//        
//                JOptionPane.showMessageDialog(this,"Course is Blank");
//        
//            } else {
//            
//                
//                
//                pst = con.prepareStatement("INSERT INTO dept_tbl (courses) VALUES (?)");
//                pst.setString(1, course);
//
//                int k = pst.executeUpdate();
//
//                if (k == 1){
//
//                    JOptionPane.showMessageDialog(this,"Data Addedd Successfully!");
//                    txt_addept.setText("");
//
//                    LoadCourseNo();
//                }else {
//
//                    JOptionPane.showMessageDialog(this,"Data Not recorded!");
//
//                }
//            
//            }
//
//        } catch (SQLException ex) {
//            Logger.getLogger(adminMain.class.getName()).log(Level.SEVERE, null, ex);
//        }
            try {
        
            String course = txt_addept.getText().trim();
            
            PreparedStatement pstCheck = con.prepareStatement("SELECT courses FROM dept_tbl WHERE courses = ?");
            pstCheck.setString(1, course);
            
            ResultSet rsCheck = pstCheck.executeQuery();
            
            if(rsCheck.next()){

                JOptionPane.showMessageDialog(this,"Course is Already Exixting");
            
            }else if (course.equals("")){
                
        
                JOptionPane.showMessageDialog(this,"Course is Blank");
        
            } else {
            
                
                
                pst = con.prepareStatement("INSERT INTO dept_tbl (courses) VALUES (?)");
                pst.setString(1, course);

                int k = pst.executeUpdate();

                if (k == 1){

                    JOptionPane.showMessageDialog(this,"Data Addedd Successfully!");
                    txt_addept.setText("");

                    LoadCourseNo();
                }else {

                    JOptionPane.showMessageDialog(this,"Data Not recorded!");

                }
            
            }

        } catch (SQLException ex) {
            Logger.getLogger(adminMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btn_adddeptActionPerformed

    private void txt_addeptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_addeptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_addeptActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         try{
            String selectedGrade = (String) cmb_Year.getSelectedItem();
            String selectedSection = (String) cmb_Sect.getSelectedItem();
            String selectedDepartment = (String) cmb_addept.getSelectedItem();
            String selectedSubject = (String) cmb_Subject.getSelectedItem();
            String Qper = txt_QPercent.getText().trim();
            String Lper = txt_LPercent.getText().trim();
            String Eper = txt_EPercent.getText().trim();

            int intQper = Integer.parseInt(Qper);
            int intLper = Integer.parseInt(Lper);
            int intEper = Integer.parseInt(Eper);
            
            int totalper = intQper + intLper + intEper;

            PreparedStatement pstCheck = con.prepareStatement("SELECT stu_Grade, stu_Dept, stu_Sect FROM percentage_tbl WHERE stu_Grade = ? AND stu_Dept = ? AND stu_Sect = ? AND subject = ?");
            pstCheck.setString(1, selectedGrade);
            pstCheck.setString(2, selectedDepartment);
            pstCheck.setString(3, selectedSection);
            pstCheck.setString(4, selectedSubject);

            ResultSet rsCheck = pstCheck.executeQuery();
            if (rsCheck.next()) {
                JOptionPane.showMessageDialog(this, "This Section already have a record!");
            } else if (Qper.equals("") || Lper.equals("") || Eper.equals("")) {
         
                JOptionPane.showMessageDialog(this, "Cannot be Blank!");
         
            }else if (totalper != 100){
                
                JOptionPane.showMessageDialog(this, "Total Value Must be 100!!");
            
            }else {
            
                

                PreparedStatement pstPer = con.prepareStatement("INSERT INTO percentage_tbl (stu_Grade, stu_Sect,stu_Dept,subject,qper,lper,eper) VALUES (?,?,?,?,?,?,?)");
                pstPer.setString(1, selectedGrade);
                pstPer.setString(2, selectedSection);
                pstPer.setString(3, selectedDepartment);
                pstPer.setString(4, selectedSubject);
                pstPer.setString(5, Qper);
                pstPer.setString(6, Lper);
                pstPer.setString(7, Eper);




                int kpsttotit = pstPer.executeUpdate();

                if (kpsttotit == 1) {
                            JOptionPane.showMessageDialog(this, "Data Added Successfully!");
                } else {
                    JOptionPane.showMessageDialog(this, "Data Not Recorded!");
                }
            
            }
        }catch(SQLException ex){
            Logger.getLogger(studentRegister.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            // TODO add your handling code here:
            String selectedGrade = (String) cmb_Year.getSelectedItem();
            String selectedSection = (String) cmb_Sect.getSelectedItem();
            String selectedDepartment = (String) cmb_addept.getSelectedItem();
            String selectedSubject = (String) cmb_Subject.getSelectedItem();
            if (selectedSubject == null || selectedSubject.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please select a subject first.");
        return; // Exit the method if subject is not selected
    }
            
            PreparedStatement pstTotit = con.prepareStatement("SELECT * FROM percentage_tbl WHERE stu_Grade = ? AND stu_Dept = ? AND stu_Sect = ? AND subject = ?");
            pstTotit.setString(1, selectedGrade);
            pstTotit.setString(2, selectedDepartment);
            pstTotit.setString(3, selectedSection);
            pstTotit.setString(4, selectedSubject);
            
            ResultSet rItems = pstTotit.executeQuery();
            
            if(rItems.next()==true ){
                txt_QPercent.setText(rItems.getString(6));
                txt_LPercent.setText(rItems.getString(7));
                txt_EPercent.setText(rItems.getString(8));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(adminMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            String selectedGrade = (String) cmb_Year.getSelectedItem();
            String selectedSection = (String) cmb_Sect.getSelectedItem();
            String selectedDepartment = (String) cmb_addept.getSelectedItem();
            String selectedSubject = (String) cmb_Subject.getSelectedItem();
            String Qper = txt_QPercent.getText().trim();
            String Lper = txt_LPercent.getText().trim();
            String Eper = txt_EPercent.getText().trim();
            
            pst = con.prepareStatement("UPDATE percentage_tbl SET qper=?, lper=?, eper=? WHERE stu_Grade=? AND stu_Dept=? AND stu_Sect=? AND subject=?");
            pst.setString(1, Qper);
            pst.setString(2, Lper);
            pst.setString(3, Eper);
            pst.setString(4, selectedGrade);
            pst.setString(5, selectedDepartment);
            pst.setString(6, selectedSection);
            pst.setString(7, selectedSubject);
            
            int k = pst.executeUpdate();
            
            if (k == 1) {
                JOptionPane.showMessageDialog(this, "Record Updated Successfully!");
                
            } else {
                JOptionPane.showMessageDialog(this, "Record Failed to Update!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(adminMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
         
//        try {
//    String selectedGrade = (String) cmb_Year.getSelectedItem();
//    String selectedDepartment = (String) cmb_addept.getSelectedItem();
//    String selectedSem = (String) cmb_sem.getSelectedItem();
//    String sub1name = txt_sub1name.getText();
//
//    // Check if the record already exists in the subject_tbl
//    PreparedStatement pstCheck = con.prepareStatement("SELECT * FROM subject_tbl WHERE sem_Num = ? AND stu_Grade = ? AND stu_Dept = ? AND sub_Name = ?");
//    pstCheck.setString(1, selectedSem);
//    pstCheck.setString(2, selectedGrade);
//    pstCheck.setString(3, selectedDepartment);
//    pstCheck.setString(4, sub1name);
//
//    ResultSet rsCheck = pstCheck.executeQuery();
//    if (rsCheck.next()) {
//        JOptionPane.showMessageDialog(this, "This Section already has a record!");
//    } else {
//        DatabaseMetaData meta = (DatabaseMetaData) con.getMetaData();
//        ResultSet rsTables = meta.getTables(null, null, sub1name+"_tbl", null);
//        if (rsTables.next()) {
//            JOptionPane.showMessageDialog(this, "Table already exists!");
//        } else {
//            // Create a new table
//            Statement createTableStatement = con.createStatement();
//            String createTableQuery = "CREATE TABLE "+sub1name+"_tbl (id INT(255) AUTO_INCREMENT PRIMARY KEY DEFAULT NULL, stu_Num VARCHAR(255) NOT NULL, stu_Fname VARCHAR(255) NOT NULL, stu_Lname VARCHAR(255) NOT NULL, stu_Dept VARCHAR(255) NOT NULL, stu_Grade INT(255) NOT NULL, stu_Sect VARCHAR(255) NOT NULL, q1 INT(255) NOT NULL, q2 INT(255) NOT NULL, q3 INT(255) NOT NULL, l1 INT(255) NOT NULL, l2 INT(255) NOT NULL, l3 INT(255) NOT NULL, mid INT(255) NOT NULL, fin INT(255), qave INT(255) NOT NULL, lave INT(255) NOT NULL, eave INT(255) NOT NULL)";
//            System.out.println("Create Table Query: " + createTableQuery);
//            createTableStatement.executeUpdate(createTableQuery);
//
//            // Insert data into the new table
//            PreparedStatement pstPerse = con.prepareStatement("SELECT stu_Num, stu_Fname, stu_Lname, stu_Dept, stu_Sect, stu_Grade FROM studentinfo_tbl WHERE stu_Dept = ? AND stu_Grade = ?");
//            pstPerse.setString(1, selectedDepartment);
//            pstPerse.setString(2, selectedGrade);
//            rs = pstPerse.executeQuery();
//            if (rs.next()) {
//                String stunum = rs.getString("stu_Num");
//                String stufname = rs.getString("stu_Fname");
//                String stulname = rs.getString("stu_Lname");
//                String studept = rs.getString("stu_Dept");
//                String stusect = rs.getString("stu_Sect");
//                String stugrade = rs.getString("stu_Grade");
//
//                // Print the values retrieved from the studentinfo_tbl
//                System.out.println("Student Info: " + stunum + ", " + stufname + ", " + stulname + ", " + studept + ", " + stusect + ", " + stugrade);
//
//                PreparedStatement pstPers = con.prepareStatement("INSERT INTO "+sub1name+"_tbl (stu_Num, stu_Fname, stu_Lname, stu_Dept, stu_Sect, q1, q2, q3, l1, l2, l3, mid, fin, qave, lave, eave, stu_Grade) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
//                pstPers.setString(1, stunum);
//                pstPers.setString(2, stufname);
//                pstPers.setString(3, stulname);
//                pstPers.setString(4, studept);
//                pstPers.setString(5, stusect);
//                pstPers.setString(6, "0");
//                pstPers.setString(7, "0");
//                pstPers.setString(8, "0");
//                pstPers.setString(9, "0");
//                pstPers.setString(10, "0");
//                pstPers.setString(11, "0");
//                pstPers.setString(12, "0");
//                pstPers.setString(13, "0");
//                pstPers.setString(14, "0");
//                pstPers.setString(15, "0");
//                pstPers.setString(16, "0");
//                pstPers.setString(17, stugrade);
//
//                // Print the INSERT query
//                System.out.println("Insert Query: " + pstPers.toString());
//
//                int kpsttotit = pstPers.executeUpdate();
//
//                if (kpsttotit == 1) {
//                    JOptionPane.showMessageDialog(this, "Data Added to "+sub1name+"_tbl Successfully!");
//                } else {
//                    JOptionPane.showMessageDialog(this, "Data Not Recorded to "+sub1name+"_tbl!");
//                }
//            }
//
//            // Insert data into the subject_tbl
//            PreparedStatement pstPer = con.prepareStatement("INSERT INTO subject_tbl (sem_Num, stu_Grade, stu_Dept, sub_Name) VALUES (?,?,?,?)");
//            pstPer.setString(1, selectedSem);
//            pstPer.setString(2, selectedGrade);
//            pstPer.setString(3, selectedDepartment);
//            pstPer.setString(4, sub1name);
//
//            // Print the INSERT query
//            System.out.println("Insert into subject_tbl Query: " + pstPer.toString());
//
//            int kpsttotit = pstPer.executeUpdate();
//
//            if (kpsttotit == 1) {
//                JOptionPane.showMessageDialog(this, "Data Added Successfully!");
//            } else {
//                JOptionPane.showMessageDialog(this, "Data Not Recorded!");
//            }
//        }
//    }
//} catch (SQLException ex) {
//    Logger.getLogger(adminMain.class.getName()).log(Level.SEVERE, null, ex);
//}

        
//       try {
//            String selectedGrade = (String) cmb_Year.getSelectedItem();
//            String selectedDepartment = (String) cmb_addept.getSelectedItem();
//            String selectedSem = (String) cmb_sem.getSelectedItem();
//            String sub1name = txt_sub1name.getText();
//
//            PreparedStatement pstCheck = con.prepareStatement("SELECT * FROM subject_tbl WHERE sem_Num = ? AND stu_Grade = ? AND stu_Dept = ? AND sub_Name = ?");
//
//            pstCheck.setString(1, selectedSem);
//            pstCheck.setString(2, selectedGrade);
//            pstCheck.setString(3, selectedDepartment);
//            pstCheck.setString(4, sub1name);
//
//            ResultSet rsCheck = pstCheck.executeQuery();
//            if (rsCheck.next()) {
//                JOptionPane.showMessageDialog(this, "This Section already has a record!");
//            } else {
//                DatabaseMetaData meta = (DatabaseMetaData) con.getMetaData();
//                ResultSet rsTables = meta.getTables(null, null, sub1name+"_tbl", null);
//                if (rsTables.next()) {
//                    JOptionPane.showMessageDialog(this, "Table already exists!");
//                } else {
//                    // Create a new table
//                    Statement createTableStatement = con.createStatement();
//                    String createTableQuery = "CREATE TABLE "+sub1name+"_tbl (id INT(255) AUTO_INCREMENT PRIMARY KEY DEFAULT NULL, stu_Num VARCHAR(255) NOT NULL, stu_Fname VARCHAR(255) NOT NULL, stu_Lname VARCHAR(255) NOT NULL, stu_Dept VARCHAR(255) NOT NULL, stu_Grade INT(255) NOT NULL, stu_Sect VARCHAR(255) NOT NULL, q1 INT(255) NOT NULL, q2 INT(255) NOT NULL, q3 INT(255) NOT NULL, l1 INT(255) NOT NULL, l2 INT(255) NOT NULL, l3 INT(255) NOT NULL, mid INT(255) NOT NULL, fin INT(255) NOT NULL, qave FLOAT(255) NOT NULL, lave FLOAT(255) NOT NULL, eave FLOAT(255) NOT NULL, fingrade FLOAT(255) NOT NULL)";
//                    createTableStatement.executeUpdate(createTableQuery);
//
//                    // Insert data into the new table
//                    PreparedStatement pstPerse = con.prepareStatement("SELECT stu_Num, stu_Fname, stu_Lname, stu_Dept, stu_Sect, stu_Grade FROM studentinfo_tbl WHERE stu_Dept = ? AND stu_Grade = ?");
//                    
//                    pstPerse.setString(1, selectedDepartment);
//                    pstPerse.setString(2, selectedGrade);
//                    
//                    rs = pstPerse.executeQuery();
//                    while(rs.next()) {
//                        String stunum = rs.getString("stu_Num");
//                        String stufname = rs.getString("stu_Fname");
//                        String stulname = rs.getString("stu_Lname");
//                        String studept = rs.getString("stu_Dept");
//                        String stusect = rs.getString("stu_Sect");
//                        String stugrade = rs.getString("stu_Grade");
//                        
//                    
//                    
//                    PreparedStatement pstPers = con.prepareStatement("INSERT INTO "+sub1name+"_tbl (stu_Num, stu_Fname, stu_Lname, stu_Dept, stu_Sect, q1, q2, q3, l1, l2, l3, mid, fin, qave, lave, eave, stu_Grade, fingrade) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
//                    pstPers.setString(1, stunum);
//                    pstPers.setString(2, stufname);
//                    pstPers.setString(3, stulname);
//                    pstPers.setString(4, studept);
//                    pstPers.setString(5, stusect);
//                    pstPers.setString(6, "0");
//                    pstPers.setString(7, "0");
//                    pstPers.setString(8, "0");
//                    pstPers.setString(9, "0");
//                    pstPers.setString(10, "0");
//                    pstPers.setString(11, "0");
//                    pstPers.setString(12, "0");
//                    pstPers.setString(13, "0");
//                    pstPers.setString(14, "0");
//                    pstPers.setString(15, "0");
//                    pstPers.setString(16, "0");
//                    pstPers.setString(17, stugrade);
//                    pstPers.setString(18, "0");
//                    
//                    
//                    
//
//                    int kpsttotit = pstPers.executeUpdate();
//                    
//                    while (kpsttotit == 1) {
//                        JOptionPane.showMessageDialog(this, "Data Added to "+sub1name+"_tbl Successfully!");
//                        break;
//                    } 
////                    else if{
////                        JOptionPane.showMessageDialog(this, "Data Not Recorded to "+sub1name+"_tbl!");
////                        break;
////                    }
//                
//                }
//
//                PreparedStatement pstPer = con.prepareStatement("INSERT INTO subject_tbl (sem_Num, stu_Grade, stu_Dept, sub_Name) VALUES (?,?,?,?)");
//                pstPer.setString(1, selectedSem);
//                pstPer.setString(2, selectedGrade);
//                pstPer.setString(3, selectedDepartment);
//                pstPer.setString(4, sub1name);
//
//                int kpsttotit = pstPer.executeUpdate();
//
//                while (kpsttotit == 1) {
//                    JOptionPane.showMessageDialog(this, "Data Added Successfully!");
//                    break;
//                } 
//                
////                else {
////                    JOptionPane.showMessageDialog(this, "Data Not Recorded!");
////                }
//                }
//            }
//} catch (SQLException ex) {
//    Logger.getLogger(adminMain.class.getName()).log(Level.SEVERE, null, ex);
//}

            try {
                        String selectedGrade = (String) cmb_Year.getSelectedItem();
                        String selectedDepartment = (String) cmb_addept.getSelectedItem();
                        String selectedSem = (String) cmb_sem.getSelectedItem();
                        String sub1name = txt_sub1name.getText();
                        
                        String sub1nameLowerCase = sub1name.toLowerCase();

                        if (selectedDepartment == null || selectedDepartment.trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Please select a department");
                } else {
                    PreparedStatement pstCheck = con.prepareStatement("SELECT * FROM subject_tbl WHERE sem_Num = ? AND stu_Grade = ? AND stu_Dept = ? AND sub_Name = ?");
                    pstCheck.setString(1, selectedSem);
                    pstCheck.setString(2, selectedGrade);
                    pstCheck.setString(3, selectedDepartment);
                    pstCheck.setString(4, sub1name);

                    ResultSet rsCheck = pstCheck.executeQuery();

                    // The rest of your code remains unchanged...


                        if (rsCheck.next()) {
                            JOptionPane.showMessageDialog(this, "This Section already has a record!");
                        } else {
                            DatabaseMetaData meta = (DatabaseMetaData) con.getMetaData();
                            ResultSet rsTables = meta.getTables(null, null, sub1name+"_tbl", null);
                            if (rsTables.next()) {
                                JOptionPane.showMessageDialog(this, "Table already exists!");
                            } else {
                                Statement createTableStatement = con.createStatement();
                                String createTableQuery = "CREATE TABLE "+sub1name+"_tbl (id INT(255) AUTO_INCREMENT PRIMARY KEY DEFAULT NULL, stu_Num VARCHAR(255) NOT NULL, stu_Fname VARCHAR(255) NOT NULL, stu_Lname VARCHAR(255) NOT NULL, stu_Dept VARCHAR(255) NOT NULL, stu_Grade INT(255) NOT NULL, stu_Sect VARCHAR(255) NOT NULL, q1 INT(255) NOT NULL, q2 INT(255) NOT NULL, q3 INT(255) NOT NULL, l1 INT(255) NOT NULL, l2 INT(255) NOT NULL, l3 INT(255) NOT NULL, mid INT(255) NOT NULL, fin INT(255) NOT NULL, qave FLOAT(11) NOT NULL, lave FLOAT(11) NOT NULL, eave FLOAT(11) NOT NULL, fingrade FLOAT(11) NOT NULL)";
                                createTableStatement.executeUpdate(createTableQuery);
                                PreparedStatement pstPerse = con.prepareStatement("SELECT stu_Num, stu_Fname, stu_Lname, stu_Dept, stu_Sect, stu_Grade FROM studentinfo_tbl WHERE stu_Dept = ? AND stu_Grade = ?");

                                pstPerse.setString(1, selectedDepartment);
                                pstPerse.setString(2, selectedGrade);

                                rs = pstPerse.executeQuery();
                                while(rs.next()) {
                                    String stunum = rs.getString("stu_Num");
                                    String stufname = rs.getString("stu_Fname");
                                    String stulname = rs.getString("stu_Lname");
                                    String studept = rs.getString("stu_Dept");
                                    String stusect = rs.getString("stu_Sect");
                                    String stugrade = rs.getString("stu_Grade");



                                PreparedStatement pstPers = con.prepareStatement("INSERT INTO "+sub1name+"_tbl (stu_Num, stu_Fname, stu_Lname, stu_Dept, stu_Sect, q1, q2, q3, l1, l2, l3, mid, fin, qave, lave, eave, stu_Grade, fingrade) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                                pstPers.setString(1, stunum);
                                pstPers.setString(2, stufname);
                                pstPers.setString(3, stulname);
                                pstPers.setString(4, studept);
                                pstPers.setString(5, stusect);
                                pstPers.setString(6, "0");
                                pstPers.setString(7, "0");
                                pstPers.setString(8, "0");
                                pstPers.setString(9, "0");
                                pstPers.setString(10, "0");
                                pstPers.setString(11, "0");
                                pstPers.setString(12, "0");
                                pstPers.setString(13, "0");
                                pstPers.setString(14, "0");
                                pstPers.setString(15, "0");
                                pstPers.setString(16, "0");
                                pstPers.setString(17, stugrade);
                                pstPers.setString(18, "0");


                                

                                int kpsttotit = pstPers.executeUpdate();
                                LoadSubjectNo();

                                while (kpsttotit == 1) {
                                    JOptionPane.showMessageDialog(this, "Data Added to "+sub1name+"_tbl Successfully!");
                                    
                                    break;
                                } 
            //                    else if{
            //                        JOptionPane.showMessageDialog(this, "Data Not Recorded to "+sub1name+"_tbl!");
            //                        break;
            //                    }

                            }

                            PreparedStatement pstPer = con.prepareStatement("INSERT INTO subject_tbl (sem_Num, stu_Grade, stu_Dept, sub_Name) VALUES (?,?,?,?)");
                            pstPer.setString(1, selectedSem);
                            pstPer.setString(2, selectedGrade);
                            pstPer.setString(3, selectedDepartment);
                            pstPer.setString(4, sub1nameLowerCase);

                            int kpsttotit = pstPer.executeUpdate();

                            if (kpsttotit == 1) {
                                JOptionPane.showMessageDialog(this, "Data Added Successfully!");
                            } else {
                                JOptionPane.showMessageDialog(this, "Data Not Recorded!");
                            }
                        }
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(adminMain.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void cmb_SubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_SubjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_SubjectActionPerformed

    private void cmb_regteasubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_regteasubActionPerformed
//        try {
//        // Check if cmb_teaid is empty or no item is selected
//            
//
//            
//            cmb_Subject.removeAllItems();
//
//            String dept = (String) cmb_addept.getSelectedItem();
//            String year = (String) cmb_Year.getSelectedItem();
//            String sem = (String) cmb_sem.getSelectedItem();
//
//            PreparedStatement pstSub = con.prepareStatement("SELECT * FROM subject_tbl WHERE stu_Dept=? AND stu_Grade = ? AND sem_Num = ?");
//
//            pstSub.setString(1, dept);
//            pstSub.setString(2, sem);
//            pstSub.setString(3, year);
//
//
//            rs = pstSub.executeQuery();
//
//            while (rs.next()) {
//                
//                cmb_Subject.addItem(rs.getString("sub_Name"));
//                
//
//
//            }
//                // Retrieve the list of courses from the database
//
//
//
//            
//        } catch (SQLException ex) {
//            Logger.getLogger(teacherRegister.class.getName()).log(Level.SEVERE, null, ex);
//        }
try {
        // Check if cmb_teaid or cmb_addept is empty or no item is selected

        if (cmb_addept.getSelectedItem() == null || cmb_addept.getSelectedItem().toString().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select a department");
            return; // Exit the method to prevent further execution
        }

        cmb_Subject.removeAllItems();

        String dept = (String) cmb_addept.getSelectedItem();
        String year = (String) cmb_Year.getSelectedItem();
        String sem = (String) cmb_sem.getSelectedItem();

        PreparedStatement pstSub = con.prepareStatement("SELECT * FROM subject_tbl WHERE stu_Dept=? AND stu_Grade = ? AND sem_Num = ?");

        pstSub.setString(1, dept);
        pstSub.setString(2, year);
        pstSub.setString(3, sem);

        rs = pstSub.executeQuery();

        while (rs.next()) {
            cmb_Subject.addItem(rs.getString("sub_Name"));
        }

    } catch (SQLException ex) {
        Logger.getLogger(teacherRegister.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_cmb_regteasubActionPerformed

    private void btn_delsubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delsubActionPerformed
       try {
            
            String selectedSubject = txt_sub1name.getText();
            
//            String query = "SELECT * FROM subject_tbl WHERE stu_Grade = ? AND sem_Num = ? AND stu_Dept = ?";
//            pst = con.prepareStatement(query);
//            pst.setString(1, stureggrade);
//            pst.setString(2, stregsem);
//            pst.setString(3, sturegdept);
//            rs = pst.executeQuery();
            
            // Clear existing items in studentComboBox
            
            // Add retrieved student IDs to studentComboBox
//            while (rs.next()) {
//                String selectedSub = rs.getString("sub_Name");
                
                
//                if (!selectedSub.matches("[a-zA-Z0-9_]+")) {
//                // Handle the case where the selectedSub contains invalid characters
//                continue; // Skip to the next iteration
//                }

        if (selectedSubject.isBlank()) {
        JOptionPane.showMessageDialog(this, "Please click search Subject first");
        return; // Exit the method if no student is selected
        }


        int dialogResult = JOptionPane.showConfirmDialog(this, "Are you sure you want to update the record?", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION) {
                PreparedStatement pstSub = con.prepareStatement("DROP TABLE "+selectedSubject+"_tbl");
                      
                int kSub= pstSub.executeUpdate();
                
                
                PreparedStatement pstStu = con.prepareStatement("DELETE FROM subject_tbl WHERE sub_Name = ?");
                pstStu.setString(1, String.valueOf(selectedSubject));
                int kStu= pstStu.executeUpdate();
                
                while ( kSub == 1 && kStu == 1) {
                    JOptionPane.showMessageDialog(this, "Data Deleted Successfully Successfully!");
                    LoadSubjectNo();
                    break;
                }
//            }
            
        }
        } catch (SQLException ex) {
            Logger.getLogger(teacherMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_delsubActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_adddept;
    private javax.swing.JButton btn_deldept;
    private javax.swing.JButton btn_delsub;
    private javax.swing.JComboBox<String> cmb_Sect;
    private javax.swing.JComboBox<String> cmb_Subject;
    private javax.swing.JComboBox<String> cmb_Year;
    private javax.swing.JComboBox<String> cmb_addept;
    private javax.swing.JButton cmb_regteasub;
    private javax.swing.JComboBox<String> cmb_sem;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_EPercent;
    private javax.swing.JTextField txt_LPercent;
    private javax.swing.JTextField txt_QPercent;
    private javax.swing.JTextField txt_addept;
    private javax.swing.JTextField txt_sub1name;
    // End of variables declaration//GEN-END:variables

    
}
